/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdminAuditImport } from './routes/admin/audit'
import { Route as AdminDirectoryImport } from './routes/admin/directory'
import { Route as AdminDiscoveryImport } from './routes/admin/discovery'
import { Route as AdminEndpointsImport } from './routes/admin/endpoints'
import { Route as InboxIndexImport } from './routes/inbox/index'
import { Route as InboxComposeImport } from './routes/inbox/compose'
import { Route as MessagesIdImport } from './routes/messages/$id'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const AdminAuditRoute = AdminAuditImport.update({
  path: '/admin/audit',
  getParentRoute: () => rootRoute,
} as any)

const AdminDirectoryRoute = AdminDirectoryImport.update({
  path: '/admin/directory',
  getParentRoute: () => rootRoute,
} as any)

const AdminDiscoveryRoute = AdminDiscoveryImport.update({
  path: '/admin/discovery',
  getParentRoute: () => rootRoute,
} as any)

const AdminEndpointsRoute = AdminEndpointsImport.update({
  path: '/admin/endpoints',
  getParentRoute: () => rootRoute,
} as any)

const InboxIndexRoute = InboxIndexImport.update({
  path: '/inbox/',
  getParentRoute: () => rootRoute,
} as any)

const InboxComposeRoute = InboxComposeImport.update({
  path: '/inbox/compose',
  getParentRoute: () => rootRoute,
} as any)

const MessagesIdRoute = MessagesIdImport.update({
  path: '/messages/$id',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/audit': {
      id: '/admin/audit'
      path: '/admin/audit'
      fullPath: '/admin/audit'
      preLoaderRoute: typeof AdminAuditImport
      parentRoute: typeof rootRoute
    }
    '/admin/directory': {
      id: '/admin/directory'
      path: '/admin/directory'
      fullPath: '/admin/directory'
      preLoaderRoute: typeof AdminDirectoryImport
      parentRoute: typeof rootRoute
    }
    '/admin/discovery': {
      id: '/admin/discovery'
      path: '/admin/discovery'
      fullPath: '/admin/discovery'
      preLoaderRoute: typeof AdminDiscoveryImport
      parentRoute: typeof rootRoute
    }
    '/admin/endpoints': {
      id: '/admin/endpoints'
      path: '/admin/endpoints'
      fullPath: '/admin/endpoints'
      preLoaderRoute: typeof AdminEndpointsImport
      parentRoute: typeof rootRoute
    }
    '/inbox/': {
      id: '/inbox/'
      path: '/inbox'
      fullPath: '/inbox'
      preLoaderRoute: typeof InboxIndexImport
      parentRoute: typeof rootRoute
    }
    '/inbox/compose': {
      id: '/inbox/compose'
      path: '/inbox/compose'
      fullPath: '/inbox/compose'
      preLoaderRoute: typeof InboxComposeImport
      parentRoute: typeof rootRoute
    }
    '/messages/$id': {
      id: '/messages/$id'
      path: '/messages/$id'
      fullPath: '/messages/$id'
      preLoaderRoute: typeof MessagesIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AdminAuditRoute,
  AdminDirectoryRoute,
  AdminDiscoveryRoute,
  AdminEndpointsRoute,
  InboxIndexRoute,
  InboxComposeRoute,
  MessagesIdRoute,
})

/* prettier-ignore-end */